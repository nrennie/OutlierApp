nodes <- load("G:/My Drive/GitHub/detecting_outlying_demand_in_multi-leg_bookings_for_transportation_networks/shiny_dashboard/nodes.Rdata")
nodes
load("G:/My Drive/GitHub/detecting_outlying_demand_in_multi-leg_bookings_for_transportation_networks/shiny_dashboard/nodes.RData")
nodes
usethis::use_data(nodes)
load("G:/My Drive/GitHub/detecting_outlying_demand_in_multi-leg_bookings_for_transportation_networks/shiny_dashboard/edges.RData")
edges
usethis::use_data(edges)
leg_names <- c("A-B_blue", "B-C_blue", "C-D_blue", "D-E_blue", "F-B_red", "B-C_red", "C-G_red", "G-H_red")
usethis::use_data(leg_names)
correlation_matrix_function <- function(leg_vec, times=c(1,29,50,64,71,75,78,80,82,84,85,86,87,88,89,90,91,92)){
output <- matrix(NA, ncol=length(leg_vec), nrow=length(leg_vec))
colnames(output) <- leg_vec
rownames(output) <- leg_vec
for (i in 1:length(leg_vec)){
#load ith data
d1 <- readRDS(paste(leg_vec[i],"_data.rds", sep=""))
for (j in 1:length(leg_vec)){
#load jth data
d2 <- readRDS(paste(leg_vec[j],"_data.rds", sep=""))
if (i > j) {
#get common dates
common_dates <- intersect(rownames(d1), rownames(d2))
fcor <- mean(DynCorr(as.matrix(d1[which(rownames(d1) %in% common_dates),]), as.matrix(d2[which(rownames(d2) %in% common_dates),]), t=times))
output[i,j] <- fcor
output[j,i] <- fcor
}
}
}
return(output)
}
connections <- c("F-B_red--B-C_blue", "B-C_red--C-D_blue")
usethis::use_data(connections)
today_date <- as.Date("2019-07-25", origin="1970-01-01")
usethis::use_data(today_date)
corr_matrix <- correlation_matrix_function(leg_names)
setwd("G:/My Drive/GitHub/detecting_outlying_demand_in_multi-leg_bookings_for_transportation_networks/shiny_dashboard")
corr_matrix <- correlation_matrix_function(leg_names)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(dashboardthemes)
library(DT)
#for network visualisation and clustering
library(visNetwork)
library(RColorBrewer)
library(igraph)
library(fdapace)
library(fda)
#for plotting
library(ggplot2)
library(plotly)
library(reshape)
library(gridExtra)
library(tidyverse)
#for outlier detection
library(mrfDepth)
library(MASS)
library(POT)
corr_matrix <- correlation_matrix_function(leg_names)
colnames(corr_matrix) <- leg_names
rownames(corr_matrix) <- leg_names
usethis::use_data(corr_matrix)
setwd("G:/My Drive/GitHub/OutlierApp")
usethis::use_data(corr_matrix)
library(OutlierApp)
warnings()
library(OutlierApp)
OutlierApp::run_app()
library(OutlierApp)
devtools::document()
packageVersion("igrpah")
packageVersion("igraph")
